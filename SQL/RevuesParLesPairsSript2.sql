-- MySQL Script generated by MySQL Workbench
-- 06/08/20 23:08:06
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema revupaire
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema revupaire
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `revupaire` DEFAULT CHARACTER SET utf8 ;
USE `revupaire` ;

-- -----------------------------------------------------
-- Table `revupaire`.`Professeur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `revupaire`.`Professeur` (
  `idProfesseur` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL,
  `prenom` VARCHAR(45) NULL,
  `email` VARCHAR(45) NOT NULL,
  `key` VARCHAR(45) NULL,
  `isAdmin` TINYINT(1) NULL DEFAULT 0,
  UNIQUE INDEX `idProfesseur_UNIQUE` (`idProfesseur` ASC),
  PRIMARY KEY (`idProfesseur`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `revupaire`.`Cours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `revupaire`.`Cours` (
  `idCours` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL,
  `session` VARCHAR(10) NOT NULL,
  `Professeur_idProfesseur` INT NOT NULL,
  UNIQUE INDEX `idCours_UNIQUE` (`idCours` ASC),
  PRIMARY KEY (`idCours`, `Professeur_idProfesseur`),
  INDEX `fk_Cours_Professeur1_idx` (`Professeur_idProfesseur` ASC),
  CONSTRAINT `fk_Cours_Professeur1`
    FOREIGN KEY (`Professeur_idProfesseur`)
    REFERENCES `revupaire`.`Professeur` (`idProfesseur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `revupaire`.`Travail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `revupaire`.`Travail` (
  `idTravail` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NOT NULL,
  `nbPoints` INT NOT NULL,
  `dateRemise` DATETIME NOT NULL,
  `creeSurCodePost` TINYINT(1) NULL,
  `nbRemise` INT NULL,
  `nbManquant` INT NULL,
  `Cours_idCours` INT NOT NULL,
  UNIQUE INDEX `idTravail_UNIQUE` (`idTravail` ASC),
  PRIMARY KEY (`idTravail`),
  INDEX `fk_Travail_Cours1_idx` (`Cours_idCours` ASC),
  CONSTRAINT `fk_Travail_Cours1`
    FOREIGN KEY (`Cours_idCours`)
    REFERENCES `revupaire`.`Cours` (`idCours`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `revupaire`.`Etudiant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `revupaire`.`Etudiant` (
  `idEtudiant` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `nom` VARCHAR(45) NULL,
  `prenom` VARCHAR(45) NULL,
  PRIMARY KEY (`idEtudiant`),
  UNIQUE INDEX `idEtudiant_UNIQUE` (`idEtudiant` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `revupaire`.`Etudiant_has_Cours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `revupaire`.`Etudiant_has_Cours` (
  `Etudiant_idEtudiant` INT NOT NULL,
  `Cours_idCours` INT NOT NULL,
  PRIMARY KEY (`Etudiant_idEtudiant`, `Cours_idCours`),
  INDEX `fk_Etudiant_has_Cours_Cours1_idx` (`Cours_idCours` ASC),
  INDEX `fk_Etudiant_has_Cours_Etudiant_idx` (`Etudiant_idEtudiant` ASC),
  CONSTRAINT `fk_Etudiant_has_Cours_Etudiant`
    FOREIGN KEY (`Etudiant_idEtudiant`)
    REFERENCES `revupaire`.`Etudiant` (`idEtudiant`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Etudiant_has_Cours_Cours1`
    FOREIGN KEY (`Cours_idCours`)
    REFERENCES `revupaire`.`Cours` (`idCours`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


use revupaire;
#----------------------------------------------------------------------------
# Procédure pour ajouter le cours 
# @auteur Ninkeu Nya Serge Martial
#----------------------------------------------------------------------------

DELIMITER |

DROP PROCEDURE IF EXISTS ajouterCours|
CREATE PROCEDURE ajouterCours(	 in p_nom VARCHAR(15) ,
                                 in p_session VARCHAR(15) ,
                                 in p_Professeur_idProfesseur VARCHAR(15)
                                 )
                                
BEGIN 
DECLARE violation_unicite CONDITION FOR 1062;
    
    DECLARE EXIT HANDLER FOR violation_unicite
		BEGIN 
			SELECT 'Violation de contrainte d''unicité' AS Erreur;
		END;

	INSERT INTO `revupaire`.`Cours` (`nom`, `session`, `Professeur_idProfesseur`)
	VALUES (p_nom , p_session , p_Professeur_idProfesseur);
    SELECT 'Le cours est ajouté' AS Message;

END |
DELIMITER ;

-- call ajoutercours('POO', 'H2020', '1');
-- call ajoutercours('BD', 'H2020', '1');
-- select * from `revupaire`.`Cours`;


#----------------------------------------------------------------------------
# Procédure pour ajouter le Travail
# @auteur Ninkeu Nya Serge Martial
#----------------------------------------------------------------------------

 
 DELIMITER |
DROP PROCEDURE IF EXISTS ajouterTravail|

CREATE PROCEDURE ajouterTravail(
								 in p_nom  VARCHAR(45) ,
                                 in p_nbPoints INT ,                                
                                 in p_dateRemise DATETIME ,
                                 in p_creeSurCodePost TINYINT(1) ,
                                 in p_nbRemise INT ,
                                 in p_nbManquant INT ,
                                 in p_Cours_idCours INT 
                                 )                                
BEGIN 
DECLARE violation_unicite CONDITION FOR 1062;
    
    DECLARE EXIT HANDLER FOR violation_unicite
		BEGIN 
			SELECT 'Violation de contrainte d''unicité' AS Erreur;
		END;

	INSERT INTO `revupaire`.`Travail` (`nom`,   `nbPoints`,  `dateRemise`, `creeSurCodePost`,`nbRemise`,  `nbManquant`, `Cours_idCours`)
	VALUES (p_nom , p_nbPoints , p_dateRemise , p_creeSurCodePost, p_nbRemise, p_nbManquant,p_Cours_idCours);
    SELECT 'Travail est ajouté' AS Message;

END |
DELIMITER ;

 -- call ajouterTravail('ExerciceNo4', '100', '20200610', '1', '1', '0','1');
 -- call ajouterTravail('ExerciceNo5', '100', '20200610', '1', '1', '0','1');
 -- select * from `revupaire`.`Travail` ;